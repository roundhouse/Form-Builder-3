/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./development/js/dashboard.js":
/*!*************************************!*\
  !*** ./development/js/dashboard.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("FormBuilder.GetEntriesCount = Garnish.Base.extend({\n  settings: null,\n  data: null,\n  startDate: null,\n  endDate: null,\n  $totalValue: null,\n  $spinner: null,\n  $widget: null,\n  $body: null,\n  init: function init(widgetId, settings) {\n    this.setSettings(settings);\n    this.$widget = $('#widget-' + widgetId);\n    this.$body = this.$widget.find('.body:first');\n    this.$error = $('<div class=\"error\"/>').appendTo(this.$body);\n    var $chartHeader = $('<div class=\"chart-header\"></div>').appendTo(this.$body);\n    var $timelinePickerWrapper = $('<div class=\"timeline-wrapper\" />').appendTo($chartHeader);\n    this.$spinner = $('<div class=\"loader hidden\"><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 42 42\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#E9EFF4\"><g fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(4 3)\" stroke-width=\"5\"><circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"/><path d=\"M36 18c0-9.94-8.06-18-18-18\"><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\" dur=\"1s\" repeatCount=\"indefinite\"/></path></g></g></svg></div>').prependTo($chartHeader);\n    var $total = $('<div class=\"total\"></div>').prependTo($chartHeader);\n    var $totalLabel = $('<div class=\"total-label\"><p>' + Craft.t('form-builder', 'Total Submissions') + '</p></div>').appendTo($total);\n    var $totalValueWrapper = $('<div class=\"total-value-wrapper\"></div>').prependTo($total);\n    var $totalValue = $('<span class=\"total-value\">&nbsp;</span>').appendTo($totalValueWrapper);\n    this.$totalValue = $totalValue;\n    this.$chartContainer = $('<div class=\"chart chart-explorer-container hidden\" style=\"height: 200px; width: 100%;\"></div>').appendTo(this.$body);\n    this.$monthBtn = $('<button id=\"month-range\" class=\"btn active\">Last 30 days</buttons>').appendTo($timelinePickerWrapper);\n    this.$weekBtn = $('<button id=\"week-range\" class=\"btn\">Week</buttons>').appendTo($timelinePickerWrapper);\n    this.addListener(this.$monthBtn, 'click', 'handleMonthChange');\n    this.addListener(this.$weekBtn, 'click', 'handleWeekChange');\n    var dateRange = 'd30';\n\n    switch (dateRange) {\n      case 'd7':\n        this.startDate = FormBuilder.GetEntriesCount.getDateByDays(6);\n        this.endDate = new Date();\n        break;\n\n      case 'd30':\n        this.startDate = FormBuilder.GetEntriesCount.getDateByDays(30);\n        this.endDate = new Date();\n        break;\n\n      case 'lastweek':\n        this.startDate = FormBuilder.GetEntriesCount.getDateByDays(13);\n        this.endDate = FormBuilder.GetEntriesCount.getDateByDays(7);\n        break;\n\n      case 'lastmonth':\n        this.startDate = FormBuilder.GetEntriesCount.getDateByDays(60);\n        this.endDate = FormBuilder.GetEntriesCount.getDateByDays(30);\n        break;\n    }\n\n    this.loadReport();\n  },\n  handleMonthChange: function handleMonthChange() {\n    this.$weekBtn.removeClass('active');\n    this.$monthBtn.addClass('active');\n    var startTime = this.monthRangeDate();\n    var endTime = new Date(new Date().getTime());\n    this.startDate = startTime;\n    this.endDate = endTime;\n    this.loadReport();\n  },\n  handleWeekChange: function handleWeekChange() {\n    this.$monthBtn.removeClass('active');\n    this.$weekBtn.addClass('active');\n    var startTime = this.weekRangeDate();\n    var endTime = new Date(new Date().getTime());\n    this.startDate = startTime;\n    this.endDate = endTime;\n    this.loadReport();\n  },\n  monthRangeDate: function monthRangeDate() {\n    var today = new Date();\n    return new Date(new Date().setDate(today.getDate() - 30));\n  },\n  weekRangeDate: function weekRangeDate() {\n    var firstDay = new Date(new Date().getTime());\n    return new Date(firstDay.getTime() - 7 * 24 * 60 * 60 * 1000);\n  },\n  loadReport: function loadReport() {\n    this.$chartContainer.html('');\n    this.$spinner.removeClass('hidden');\n    var requestData = {\n      startDate: FormBuilder.GetEntriesCount.getDateValue(this.startDate),\n      endDate: FormBuilder.GetEntriesCount.getDateValue(this.endDate),\n      formId: this.settings.formId\n    };\n    Craft.postActionRequest('form-builder/charts/get-entries-count', requestData, $.proxy(function (response, textStatus) {\n      if (textStatus === 'success' && typeof response.error === 'undefined') {\n        this.$chartContainer.removeClass('hidden');\n        this.chart = new Craft.charts.Area(this.$chartContainer, {\n          yAxis: {\n            formatter: function formatter(chart) {\n              return function (d) {\n                var format = ',.0f';\n\n                if (d !== Math.round(d)) {\n                  format = ',.1f';\n                }\n\n                return chart.formatLocale.format(format)(d);\n              };\n            }\n          }\n        });\n        var chartDataTable = new Craft.charts.DataTable(response.dataTable);\n        var chartSettings = {\n          orientation: response.orientation,\n          dataScale: response.scale,\n          formats: response.formats\n        };\n        this.chart.draw(chartDataTable, chartSettings);\n        this.$totalValue.html(response.totalHtml);\n      } else {\n        var msg = Craft.t('A server error occurred');\n\n        if (typeof response !== 'undefined' && response && typeof response.error !== 'undefined') {\n          msg = response.error;\n        }\n\n        this.$error.html(msg);\n        this.$error.removeClass('hidden');\n      }\n    }, this)); // this.$widget.data('widget').on('destroy', $.proxy(this, 'destroy'))\n\n    this.$spinner.addClass('hidden');\n    FormBuilder.GetEntriesCount.instances.push(this);\n  },\n  destroy: function destroy() {\n    FormBuilder.GetEntriesCount.instances.splice($.inArray(this, FormBuilder.GetEntriesCount.instances), 1);\n    this.base();\n  }\n}, {\n  instances: [],\n  getDateByDays: function getDateByDays(days) {\n    var date = new Date();\n    date = date.getTime() - 60 * 60 * 24 * days * 1000;\n    return new Date(date);\n  },\n  getDateValue: function getDateValue(date) {\n    return Math.floor(date.getTime() / 1000);\n  }\n}); // let DashboardReportChart;\n//\n//\n//\n//\n// DashboardReportChart = Garnish.Base.extend({\n//     $container: null,\n//     $chartExplorer: null,\n//     $totalValue: null,\n//     $chartContainer: null,\n//     $spinner: null,\n//     $error: null,\n//     $chart: null,\n//\n//     params: {\n//         startDate: null,\n//         endDate: null\n//     },\n//\n//     init(widgetId, settings) {\n//         this.setSettings(settings)\n//\n//         this.$widget = $('#widget-' + widgetId)\n//         this.$body = this.$widget.find('.body:first')\n//         this.$chartContainer = $('<div class=\"chart hidden\"></div>').appendTo(this.$body)\n//         this.$error = $('<div class=\"error\"/>').appendTo(this.$body)\n//\n//         // let dateRange = this.settings.dateRange;\n//         let dateRange = 'd30';\n//\n//         switch (dateRange) {\n//             case 'd7':\n//                 this.startDate = DashboardReportChart.getDateByDays(6)\n//                 this.endDate = new Date()\n//                 break\n//\n//             case 'd30':\n//                 this.startDate = DashboardReportChart.getDateByDays(30)\n//                 this.endDate = new Date()\n//                 break\n//\n//             case 'lastweek':\n//                 this.startDate = DashboardReportChart.getDateByDays(13)\n//                 this.endDate = DashboardReportChart.getDateByDays(7)\n//                 break\n//\n//             case 'lastmonth':\n//                 this.startDate = DashboardReportChart.getDateByDays(60)\n//                 this.endDate = DashboardReportChart.getDateByDays(30)\n//                 break\n//         }\n//\n//         // Request report\n//         let requestData = {\n//             startDate: DashboardReportChart.getDateValue(this.startDate),\n//             endDate: DashboardReportChart.getDateValue(this.endDate),\n//         }\n//\n//         this.loadReport(requestData)\n//\n//\n//         // this.$container = $(widgetId)\n//         // this.createChartExplorer()\n//         // this.handleMonthChange()\n//     },\n//\n//     getStorage(key) {\n//         return DashboardReportChart.getStorage(this._namespace, key);\n//     },\n//\n//     setStorage(key, value) {\n//         DashboardReportChart.setStorage(this._namespace, key, value)\n//     },\n//\n//     createChartExplorer() {\n//         let $chartExplorer = $('<div class=\"chart-explorer\" style=\"height: 100%; width: 100%;\"></div>').appendTo(this.$container)\n//         let $chartHeader = $('<div class=\"chart-header\"></div>').appendTo($chartExplorer)\n//\n//         let $timelinePickerWrapper = $('<div class=\"timeline-wrapper\" />').appendTo($chartHeader)\n//\n//         let $total = $('<div class=\"total\"></div>').prependTo($chartHeader)\n//         let $totalLabel = $('<div class=\"total-label\"><p>'+Craft.t('form-builder', 'Total Submissions')+'</p></div>').appendTo($total)\n//         let $totalValueWrapper = $('<div class=\"total-value-wrapper\"></div>').prependTo($total)\n//         let $totalValue = $('<span class=\"total-value\">&nbsp;</span>').appendTo($totalValueWrapper)\n//\n//         this.$chartExplorer = $chartExplorer\n//         this.$totalValue = $totalValue\n//         this.$chartContainer = $('<div class=\"chart-container\"></div>').appendTo($chartExplorer)\n//         this.$spinner = $('<div class=\"loader\"><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 42 42\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#E9EFF4\"><g fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(4 3)\" stroke-width=\"5\"><circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"/><path d=\"M36 18c0-9.94-8.06-18-18-18\"><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\" dur=\"1s\" repeatCount=\"indefinite\"/></path></g></g></svg></div>').prependTo($chartHeader)\n//         this.$error = $('<div class=\"error\"></div>').appendTo(this.$chartContainer)\n//         this.$chart = $('<div class=\"chart\"></div>').appendTo(this.$chartContainer)\n//\n//         this.$monthBtn = $('<button id=\"month-range\" class=\"active\">Last 30 days</buttons>').appendTo($timelinePickerWrapper)\n//         this.$weekBtn = $('<button id=\"week-range\">Week</buttons>').appendTo($timelinePickerWrapper)\n//\n//         this.addListener(this.$monthBtn, 'click', 'handleMonthChange')\n//         this.addListener(this.$weekBtn, 'click', 'handleWeekChange')\n//     },\n//\n//     handleMonthChange() {\n//         this.$weekBtn.removeClass('active')\n//         this.$monthBtn.addClass('active')\n//\n//         let startTime = this.monthRangeDate()\n//         let endTime = new Date(((new Date()).getTime()))\n//\n//         this.params.startDate = startTime\n//         this.params.endDate = endTime\n//\n//         this.setStorage('startTime', startTime)\n//         this.setStorage('endTime', endTime)\n//\n//         this.loadReport()\n//     },\n//\n//     handleWeekChange() {\n//         this.$monthBtn.removeClass('active')\n//         this.$weekBtn.addClass('active')\n//\n//         let startTime = this.weekRangeDate()\n//         let endTime = new Date(((new Date()).getTime()))\n//\n//         this.params.startDate = startTime\n//         this.params.endDate = endTime\n//\n//         this.setStorage('startTime', startTime)\n//         this.setStorage('endTime', endTime)\n//\n//         this.loadReport()\n//     },\n//\n//     monthRangeDate() {\n//         let today = new Date()\n//         let priorDate = new Date(new Date().setDate(today.getDate()-30))\n//\n//         return priorDate\n//     },\n//\n//     weekRangeDate() {\n//         let firstDay = new Date((new Date()).getTime())\n//         let previousweek= new Date(firstDay.getTime() - 7 * 24 * 60 * 60 * 1000)\n//\n//         return previousweek\n//     },\n//\n//\n//     loadReport(data) {\n//         let requestData = data\n//         //\n//         // requestData.startDate = this.getDateValue(this.params.startDate)\n//         // requestData.endDate = this.getDateValue(this.params.endDate)\n//         // requestData.startDate = this.getDateValue(data.startDate)\n//         // requestData.endDate = this.getDateValue(data.endDate)\n//         requestData.elementType = 'roundhouse\\\\formbuilder\\\\elements\\\\Entry'\n//\n//         // this.$spinner.removeClass('hidden')\n//         // this.$error.addClass('hidden')\n//         // this.$chart.removeClass('error')\n//\n//         console.log(requestData)\n//\n//         Craft.postActionRequest('form-builder/charts/get-entries-count', requestData, $.proxy(function(response, textStatus) {\n//             if (textStatus === 'success' && typeof(response.error) === 'undefined') {\n//                 this.$chartContainer.removeClass('hidden');\n//\n//                 // Create chart\n//                 this.chart = new Craft.charts.Area(this.$chartContainer, {\n//                     yAxis: {\n//                         formatter: function(chart) {\n//                             return function(d) {\n//                                 var format = ',.0f';\n//\n//                                 if (d !== Math.round(d)) {\n//                                     format = ',.1f';\n//                                 }\n//\n//                                 return chart.formatLocale.format(format)(d);\n//                             };\n//                         }\n//                     }\n//                 });\n//\n//                 let chartDataTable = new Craft.charts.DataTable(response.dataTable);\n//\n//                 let chartSettings = {\n//                     orientation: response.orientation,\n//                     dataScale: response.scale,\n//                     formats: response.formats\n//                 };\n//\n//                 this.chart.draw(chartDataTable, chartSettings);\n//\n//                 // Resize chart when grid is refreshed\n//                 // window.dashboard.grid.on('refreshCols', $.proxy(this, 'handleGridRefresh'));\n//             }\n//             else {\n//                 // Error\n//                 var msg = Craft.t('A server error occurred.');\n//\n//                 if (typeof(response) !== 'undefined' && response && typeof(response.error) !== 'undefined') {\n//                     msg = response.error;\n//                 }\n//\n//                 this.$error.html(msg);\n//                 this.$error.removeClass('hidden');\n//             }\n//\n//\n//             // this.$spinner.addClass('hidden');\n//             // if(textStatus === 'success' && typeof(response.error) == 'undefined') {\n//             //     if(!this.chart) {\n//             //         this.chart = new Craft.charts.Area(this.$chart)\n//             //     }\n//             //\n//             //     let chartDataTable = new Craft.charts.DataTable(response.dataTable)\n//             //\n//             //     let chartSettings = {\n//             //         orientation: response.orientation,\n//             //         formats: response.formats,\n//             //         dataScale: response.scale,\n//             //         margin: { top: 10, right: 10, bottom: 30, left: 10 }\n//             //     }\n//             //\n//             //\n//             //     this.chart.settings.formats = response.formats\n//             //\n//             //     this.chart.draw(chartDataTable, chartSettings)\n//             //     this.$totalValue.html(response.totalHtml)\n//             //\n//             // } else {\n//             //     let msg = Craft.t('An unknown error occurred.')\n//             //\n//             //     if (typeof(response) != 'undefined' && response && typeof(response.error) != 'undefined') {\n//             //         msg = response.error\n//             //     }\n//             //\n//             //     this.$error.html(msg)\n//             //     this.$error.removeClass('hidden')\n//             //     this.$chart.addClass('error')\n//             // }\n//         }, this));\n//     },\n//\n//     getDateFromDatepickerInstance(inst) {\n//         return new Date(inst.currentYear, inst.currentMonth, inst.currentDay)\n//     },\n//\n//     // getDateValue(date) {\n//     //     return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()\n//     // },\n//\n//\n// },{\n//     getDateByDays(days) {\n//         let date = new Date()\n//         date = date.getTime() - (60 * 60 * 24 * days * 1000)\n//         return new Date(date)\n//     },\n//\n//     getDateValue(date) {\n//         return Math.floor(date.getTime() / 1000)\n//     },\n//\n//     storage: {},\n//\n//     getStorage(namespace, key) {\n//         if (DashboardReportChart.storage[namespace] && DashboardReportChart.storage[namespace][key]) {\n//             return DashboardReportChart.storage[namespace][key]\n//         }\n//\n//         return null\n//     },\n//\n//     setStorage(namespace, key, value) {\n//         if (typeof DashboardReportChart.storage[namespace] == typeof undefined) {\n//             DashboardReportChart.storage[namespace] = {}\n//         }\n//\n//         DashboardReportChart.storage[namespace][key] = value\n//     }\n// });\n//\n// Garnish.$doc.ready(() => {\n//     new DashboardReportChart('recent-submissions-chart-widget')\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./development/js/dashboard.js\n");

/***/ }),

/***/ 1:
/*!*******************************************!*\
  !*** multi ./development/js/dashboard.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/owldesign/Formbuilder/plugins/formbuilder/development/js/dashboard.js */"./development/js/dashboard.js");


/***/ })

/******/ });