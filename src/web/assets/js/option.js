/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************************!*\
  !*** ./development/js/option.js ***!
  \**********************************/
eval("var Option;\nwindow.Option = Garnish.Base.extend({\n  $container: null,\n  $resultWrapper: null,\n  $resultContainer: null,\n  $toggle: null,\n  $edit: null,\n  $data: null,\n  $inputs: null,\n  enabled: false,\n  editing: false,\n  hasModal: false,\n  hasTags: false,\n  isTemplate: false,\n  $enableCheckbox: null,\n  $fields: null,\n  init: function init(container) {\n    var self;\n    self = this;\n    this.$container = $(container);\n    this.$resultWrapper = this.$container.find('.option-wrapper');\n    this.$resultContainer = this.$container.find('.option-result');\n    this.$toggle = this.$container.find('.option-toggle');\n    this.$edit = this.$container.find('.option-edit');\n\n    if (this.$container.hasClass('tags')) {\n      this.hasTags = true;\n    }\n\n    if (this.$container.hasClass('is-template')) {\n      this.isTemplate = true;\n    }\n\n    this.$inputs = this.$container.data('inputs');\n    this.$data = this.$container.data('modal');\n\n    if (this.$data) {\n      this.$fields = this.$data.fields;\n      this.hasModal = true;\n    }\n\n    if (this.$inputs) {\n      $.each(this.$inputs, function (i, item) {\n        var name;\n\n        if (item.type === 'checkbox') {\n          self.enabled = item.checked;\n          name = item.name;\n          self.$enableCheckbox = $(\"[name='\".concat(name, \"']\"));\n        } else {\n          self.enabled = true;\n        }\n      });\n    }\n\n    this.addListener(this.$toggle, 'click', 'toggle');\n    this.addListener(this.$edit, 'click', 'edit');\n\n    if (this.enabled) {\n      this.editing = true;\n\n      if (this.$data) {\n        this.$edit.removeClass('hidden');\n      }\n    }\n  },\n  toggle: function toggle(e) {\n    e.preventDefault();\n    this.editing = false;\n\n    if (this.$container.hasClass('option-enabled')) {\n      this.$edit.addClass('hidden');\n      this.$container.removeClass('option-enabled');\n      this.$resultWrapper.addClass('hidden');\n      this.$resultContainer.html('');\n      this.$toggle.html('ENABLE');\n      this.disableOption();\n    } else {\n      this.$edit.removeClass('hidden');\n      this.$container.addClass('option-enabled');\n      this.$toggle.html('DISABLE');\n      this.enableOption();\n\n      if (this.hasModal) {\n        if (!this.modal) {\n          this.modal = new OptionModal(this);\n        } else {\n          this.modal.$form.find('.fb-field').removeClass('error');\n          this.modal.$form[0].reset();\n          this.modal.show();\n        }\n      }\n    }\n  },\n  edit: function edit(e) {\n    e.preventDefault();\n    var self;\n    self = this;\n    this.editing = true;\n\n    if (this.editing) {\n      if (!this.modal) {\n        this.modal = new OptionModal(this);\n      } else {\n        this.modal.$form.find('.fb-field').removeClass('error');\n        $.each(this.$inputs, function (i, item) {\n          var className;\n          var currentValue;\n\n          if (item.type !== 'checkbox') {\n            currentValue = $(\"[name='\".concat(item.name, \"']\")).val();\n            console.log(item.name);\n            className = item.name.replace(/[_\\W]+/g, \"-\").slice(0, -1);\n            $.each(self.modal.$modalInputs, function (i, item) {\n              var input;\n              input = $(item);\n\n              if (input.hasClass(className)) {\n                input.val(currentValue);\n              }\n            });\n          }\n        });\n        this.modal.show();\n      }\n    }\n  },\n  disableOption: function disableOption() {\n    this.$enableCheckbox.prop('checked', false);\n  },\n  enableOption: function enableOption() {\n    if (this.$enableCheckbox) {\n      this.$enableCheckbox.prop('checked', true);\n    }\n  },\n  updateHtmlFromModal: function updateHtmlFromModal() {\n    var self;\n    self = this;\n    var $resultHtml;\n    var body;\n    var index;\n    var key;\n    var name;\n    var totalResults;\n    var value;\n\n    if (this.hasTags) {\n      totalResults = this.$resultContainer.find('.result-item').length;\n\n      if (totalResults) {\n        index = totalResults;\n      } else {\n        index = 0;\n      }\n\n      $resultHtml = $(\"<div class=\\\"result-item\\\" data-result-index=\\\"\".concat(index, \"\\\">\")).appendTo(Garnish.$bod);\n      name = $(this.modal.$modalInputs[0]).data('name');\n      key = $(this.modal.$modalInputs[0]).val();\n      value = $(this.modal.$modalInputs[1]).val();\n      body = $(['<div class=\"option-result-actions\">', \"<a href=\\\"#\\\" class=\\\"option-result-delete\\\" title=\\\"\".concat(Craft.t('form-builder', 'Delete'), \"\\\"><svg width=\\\"19\\\" height=\\\"19\\\" viewBox=\\\"0 0 19 19\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.521064 18.5182504c-4.973493 0-9.019897-4.0510671-9.019897-9.030471 0-4.98018924 4.046404-9.0312563 9.019897-9.0312563s9.019897 4.05106706 9.019897 9.0312563c0 4.9794039-4.046404 9.030471-9.019897 9.030471zm0-16.05425785c-3.868359 0-7.015127 3.15021907-7.015127 7.02378685 0 3.8727824 3.146768 7.0237869 7.015127 7.0237869 3.86836 0 7.015127-3.1510045 7.015127-7.0237869 0-3.87356778-3.146767-7.02378685-7.015127-7.02378685zm3.167945 10.02870785c-.196085.1955634-.452564.2937378-.708258.2937378-.256479 0-.512958-.0981744-.709042-.2937378L9.521064 10.739699 7.77042 12.4927004c-.196085.1955634-.452564.2937378-.709043.2937378-.256478 0-.512957-.0981744-.708258-.2937378-.391385-.391912-.391385-1.0272965 0-1.4192086l1.750645-1.7530015-1.750645-1.7530015c-.391385-.391912-.391385-1.02729655 0-1.41920862.391385-.39191207 1.025131-.39191207 1.417301 0L9.521064 7.9012817l1.750645-1.75300152c.391385-.39191207 1.025915-.39191207 1.4173 0 .391385.39191207.391385 1.02729662 0 1.41920862l-1.750644 1.7530015 1.750644 1.7530015c.391385.3919121.391385 1.0272966 0 1.4192086z\\\" fill=\\\"#8094A1\\\" fill-rule=\\\"evenodd\\\"/></svg></a>\"), '</div>', \"<code><span class=\\\"option-key input-hint\\\">\".concat(key, \"</span> \").concat(value, \"</code>\"), \"<input type=\\\"hidden\\\" name=\\\"\".concat(name, \"[\").concat(index, \"][key]\\\" value=\\\"\").concat(key, \"\\\" />\"), \"<input type=\\\"hidden\\\" name=\\\"\".concat(name, \"[\").concat(index, \"][value]\\\" value=\\\"\").concat(value, \"\\\" />\")].join('')).appendTo($resultHtml);\n      this.$resultContainer.append($resultHtml);\n      new Tag($resultHtml, this.modal);\n    } else {\n      if (this.isTemplate) {\n        updateTemplateHtml(this.modal, this.$container);\n      }\n\n      this.$resultContainer.html('');\n      $.each(this.modal.$modalInputs, function (i, item) {\n        var hint;\n        value = $(item).val();\n\n        if (value) {\n          name = $(item).data('name');\n          hint = $(item).data('hint');\n          $(\"[name='\".concat(name, \"']\")).val(value);\n          self.$resultContainer.append($(\"<code><span class='input-hint'>\".concat(hint, \":</span> \").concat(value, \"</code>\")));\n        } else {\n          name = $(item).data('name');\n          hint = $(item).data('hint');\n          $(\"[name='\".concat(name, \"']\")).val('');\n        }\n      });\n    }\n\n    this.$resultWrapper.removeClass('hidden');\n  }\n});\nGarnish.$doc.ready(function () {\n  return $('.option-item').each(function (i, el) {\n    return new window.Option(el);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./development/js/option.js\n");
/******/ })()
;