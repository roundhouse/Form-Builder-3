/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./development/js/forms.js":
/*!*********************************!*\
  !*** ./development/js/forms.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.FormBuilder.FormEdit = Garnish.Base.extend({\n  $page: null,\n  // Database\n  $saveToDatabaseToggle: null,\n  $databaseTitleFormatField: null,\n  $databaseTitleFormatInput: null,\n  // Submit Button Text\n  $submitButtonToggle: null,\n  $submitButtonTextField: null,\n  $submitButtonTextInput: null,\n  // Custom Redirect\n  $customRedirectToggle: null,\n  $customRedirectField: null,\n  $customRedirectInput: null,\n  // Messages\n  $messagesToggle: null,\n  $messagesSuccessField: null,\n  $messagesSuccessInput: null,\n  $messagesErrorField: null,\n  $messagesErrorInput: null,\n  // Spam Protection\n  $honeypotToggle: null,\n  $honeypotMessageField: null,\n  $honeypotMessageInput: null,\n  $timedToggle: null,\n  $timedNumberField: null,\n  $timedNumberInput: null,\n  // Global Input Templates\n  $globalInputTemplateInput: null,\n  $globalInputTemplateResponse: null,\n  init: function init() {\n    this.$page = $('.fb-edit-form'); // Database\n\n    this.prepSaveToDatabaseFields(); // Submit Button Text\n\n    this.prepSubmitButtonText(); // Custom Redirect\n\n    this.prepCustomRedirect(); // Messages\n\n    this.prepMessages(); // Spam Protection\n\n    this.prepSpamProtection(); // Global Input Templates\n\n    this.prepGlobalInputTemplates();\n  },\n  // Database\n  prepSaveToDatabaseFields: function prepSaveToDatabaseFields() {\n    this.$saveToDatabaseToggle = this.$page.find('#saveToDatabaseToggle');\n    this.$databaseTitleFormatField = this.$page.find('#titleFormat-field').hide();\n    this.$databaseTitleFormatInput = this.$page.find('#titleFormat');\n    var checked = this.$saveToDatabaseToggle.attr('aria-checked');\n    checked === 'true' ? this.$databaseTitleFormatField.slideDown(100) : this.$databaseTitleFormatField.slideUp(40);\n    this.addListener(this.$saveToDatabaseToggle, 'click', this.handleSaveToDatabaseToggle);\n  },\n  handleSaveToDatabaseToggle: function handleSaveToDatabaseToggle() {\n    var checked = this.$saveToDatabaseToggle.attr('aria-checked');\n    checked === 'true' ? (this.$databaseTitleFormatField.slideDown(100), this.$databaseTitleFormatInput.focus()) : this.$databaseTitleFormatField.slideUp(40);\n  },\n  // Submit Button Text\n  prepSubmitButtonText: function prepSubmitButtonText() {\n    this.$submitButtonToggle = this.$page.find('#submitButtonToggle');\n    this.$submitButtonTextField = this.$page.find('#submitButtonText-field').hide();\n    this.$submitButtonTextInput = this.$page.find('#submitButtonText');\n    var checked = this.$submitButtonToggle.attr('aria-checked');\n    checked === 'true' ? this.$submitButtonTextField.slideDown(100) : this.$submitButtonTextField.slideUp(40);\n    this.addListener(this.$submitButtonToggle, 'click', this.handleSubmitButtonToggle);\n  },\n  handleSubmitButtonToggle: function handleSubmitButtonToggle() {\n    var checked = this.$submitButtonToggle.attr('aria-checked');\n    checked === 'true' ? (this.$submitButtonTextField.slideDown(100), this.$submitButtonTextInput.focus()) : this.$submitButtonTextField.slideUp(40);\n  },\n  // Custom Redirect\n  prepCustomRedirect: function prepCustomRedirect() {\n    this.$customRedirectToggle = this.$page.find('#customRedirectToggle');\n    this.$customRedirectField = this.$page.find('#customRedirect-field').hide();\n    this.$customRedirectInput = this.$page.find('#customRedirect');\n    var checked = this.$customRedirectToggle.attr('aria-checked');\n    checked === 'true' ? this.$customRedirectField.slideDown(100) : this.$customRedirectField.slideUp(40);\n    this.addListener(this.$customRedirectToggle, 'click', this.handleCustomRedirectToggle);\n  },\n  handleCustomRedirectToggle: function handleCustomRedirectToggle() {\n    var checked = this.$customRedirectToggle.attr('aria-checked');\n    checked === 'true' ? (this.$customRedirectField.slideDown(100), this.$customRedirectInput.focus()) : this.$customRedirectField.slideUp(40);\n  },\n  // Messages\n  prepMessages: function prepMessages() {\n    this.$messagesToggle = this.$page.find('#messagesToggle');\n    this.$messagesSuccessField = this.$page.find('#messagesSuccess-field').hide();\n    this.$messagesSuccessInput = this.$page.find('#messagesSuccess');\n    this.$messagesErrorField = this.$page.find('#messagesError-field').hide();\n    this.$messagesErrorInput = this.$page.find('#messagesError');\n    var checked = this.$messagesToggle.attr('aria-checked');\n    checked === 'true' ? (this.$messagesSuccessField.slideDown(100), this.$messagesErrorField.slideDown(100)) : (this.$messagesSuccessField.slideUp(40), this.$messagesErrorField.slideUp(40));\n    this.addListener(this.$messagesToggle, 'click', this.handleMessagesToggle);\n  },\n  handleMessagesToggle: function handleMessagesToggle() {\n    var checked = this.$messagesToggle.attr('aria-checked');\n    checked === 'true' ? (this.$messagesSuccessField.slideDown(100), this.$messagesSuccessInput.focus(), this.$messagesErrorField.slideDown(100)) : (this.$messagesSuccessField.slideUp(40), this.$messagesErrorField.slideUp(40));\n  },\n  // Spam Protection\n  prepSpamProtection: function prepSpamProtection() {\n    this.$honeypotToggle = this.$page.find('#honeypotToggle');\n    this.$honeypotMessageField = this.$page.find('#honeypotMessage-field').hide();\n    this.$honeypotMessageInput = this.$page.find('#honeypotMessage');\n    this.$timedToggle = this.$page.find('#timedToggle');\n    this.$timedNumberField = this.$page.find('#timedNumber-field').hide();\n    this.$timedNumberInput = this.$page.find('#timedNumber');\n    var checkedHoneypot = this.$honeypotToggle.attr('aria-checked');\n    checkedHoneypot === 'true' ? this.$honeypotMessageField.slideDown(100) : this.$honeypotMessageField.slideUp(40);\n    console.log(checkedHoneypot);\n    this.addListener(this.$honeypotToggle, 'click', this.handleHoneypotToggle);\n    var checkedTimed = this.$timedToggle.attr('aria-checked');\n    checkedTimed === 'true' ? this.$timedNumberField.slideDown(100) : this.$timedNumberField.slideUp(40);\n    this.addListener(this.$timedToggle, 'click', this.handleTimedToggle);\n  },\n  handleHoneypotToggle: function handleHoneypotToggle() {\n    var checked = this.$honeypotToggle.attr('aria-checked');\n    checked === 'true' ? (this.$honeypotMessageField.slideDown(100), this.$honeypotMessageInput.focus()) : this.$honeypotMessageField.slideUp(40);\n  },\n  handleTimedToggle: function handleTimedToggle() {\n    var checked = this.$timedToggle.attr('aria-checked');\n    checked === 'true' ? (this.$timedNumberField.slideDown(100), this.$timedNumberInput.focus()) : this.$timedNumberField.slideUp(40);\n  },\n  // Global Input Templates\n  prepGlobalInputTemplates: function prepGlobalInputTemplates() {\n    this.$globalInputTemplateInput = this.$page.find('#inputTemplate');\n    this.$globalInputTemplateResponse = this.$page.find('.input-path-response');\n    this.addListener(this.$globalInputTemplateInput, 'keyup', this.checkTemplatePath);\n  },\n  checkTemplatePath: function checkTemplatePath() {\n    var timeout,\n        self = this;\n    var data = {\n      path: this.$globalInputTemplateInput.val()\n    };\n    clearTimeout(timeout); // TODO: add better UX here\n\n    timeout = setTimeout(function () {\n      Craft.postActionRequest('form-builder/forms/check-input-template-path', data, $.proxy(function (response, textStatus) {\n        if (response.valid) {\n          self.$globalInputTemplateResponse.html(Craft.t('form-builder', 'Path is valid'));\n        } else {\n          self.$globalInputTemplateResponse.html(Craft.t('form-builder', 'Invalid Path'));\n        }\n      }, this));\n    }, 1000);\n  }\n});\nvar FormBuilderSection;\nwindow.FormBuilderSection = Garnish.Base.extend({\n  $container: null,\n  $titlebar: null,\n  $fieldsContainer: null,\n  $optionsContainer: null,\n  $previewContainer: null,\n  // $actionMenu: null,\n  $collapserBtn: null,\n  $sectionToggleInput: null,\n  $menuBtn: null,\n  $status: null,\n  modal: null,\n  collapsed: false,\n  optionCollapsed: true,\n  type: null,\n  $delete: null,\n  init: function init(el, type) {\n    var menuBtn;\n    this.type = type;\n    this.$container = $(el);\n    this.$menuBtn = this.$container.find('.actions > .settings');\n    this.$collapserBtn = this.$container.find('.actions > .bodytoggle');\n    this.$sectionToggleInput = this.$container.find('.section-toggle');\n    this.$titlebar = this.$container.find('.titlebar');\n    this.$fieldsContainer = this.$container.find('.body');\n    this.$optionsContainer = this.$container.find('.body-options');\n    this.$previewContainer = this.$container.find('.preview');\n    this.$status = this.$container.find('.actions > .status');\n    this.$delete = this.$container.find('.delete-btn'); // menuBtn = new Garnish.MenuBtn(this.$menuBtn);\n    // this.$actionMenu = menuBtn.menu.$container;\n    // menuBtn.menu.settings.onOptionSelect = $.proxy(this, 'onMenuOptionSelect');\n\n    if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n      this.collapse();\n    }\n\n    this._handleTitleBarClick = function (ev) {\n      ev.preventDefault();\n      return this.toggle();\n    };\n\n    this.addListener(this.$delete, 'click', this[\"delete\"]);\n    this.addListener(this.$collapserBtn, 'click', this.toggle);\n    this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n  },\n  toggle: function toggle() {\n    if (this.collapsed) {\n      return this.expand();\n    } else {\n      this.$sectionToggleInput.prop('checked', true);\n      return this.collapse(true);\n    }\n  },\n  collapse: function collapse(animate) {\n    var $customTemplates;\n    var $fields;\n    var previewHtml;\n    var title;\n    this.$sectionToggleInput.prop('checked', true);\n\n    if (this.collapsed) {\n      return;\n    }\n\n    this.$container.addClass('bodycollapsed');\n    previewHtml = '';\n    title = this.$titlebar.find('.tout-title').text();\n    this.$previewContainer.html(previewHtml);\n    this.$fieldsContainer.velocity('stop');\n    this.$container.velocity('stop');\n\n    if (animate) {\n      this.$fieldsContainer.velocity('fadeOut', {\n        duration: 'fast'\n      });\n      this.$container.velocity({\n        height: '100%'\n      }, 'fast');\n    } else {\n      this.$previewContainer.show();\n      this.$fieldsContainer.hide();\n      this.$container.css({\n        height: '100%'\n      });\n    } // setTimeout($.proxy((function() {\n    //     this.$actionMenu.find('a[data-action=collapse]:first').parent().addClass('hidden');\n    //     return this.$actionMenu.find('a[data-action=expand]:first').parent().removeClass('hidden');\n    // }), this), 200);\n\n\n    return this.collapsed = true;\n  },\n  expand: function expand() {\n    var collapsedContainerHeight;\n    var expandedContainerHeight;\n    this.$sectionToggleInput.prop('checked', false);\n\n    if (!this.collapsed) {\n      return;\n    }\n\n    this.$container.removeClass('bodycollapsed');\n    this.$fieldsContainer.velocity('stop');\n    this.$container.velocity('stop');\n    collapsedContainerHeight = this.$container.height();\n    this.$container.height('auto');\n    this.$fieldsContainer.show();\n    expandedContainerHeight = this.$container.height();\n    this.$container.height(collapsedContainerHeight);\n    this.$fieldsContainer.hide().velocity('fadeIn', {\n      duration: 'fast'\n    });\n    this.$container.velocity({\n      height: expandedContainerHeight\n    }, 'fast', $.proxy(function () {\n      return this.$container.height('auto');\n    }, this)); // setTimeout($.proxy((function() {\n    //     this.$actionMenu.find('a[data-action=collapse]:first').parent().removeClass('hidden');\n    //     return this.$actionMenu.find('a[data-action=expand]:first').parent().addClass('hidden');\n    // }), this), 200);\n\n    return this.collapsed = false;\n  },\n  disable: function disable() {\n    this.$fieldsContainer.find('.enable-integration-section').prop('checked', false);\n    this.$status.removeClass('on');\n    this.$status.addClass('off'); // setTimeout($.proxy((function() {\n    //     this.$actionMenu.find('a[data-action=disable]:first').parent().addClass('hidden');\n    //     return this.$actionMenu.find('a[data-action=enable]:first').parent().removeClass('hidden');\n    // }), this), 200);\n\n    return this.collapse(true);\n  },\n  enable: function enable() {\n    this.$fieldsContainer.find('.enable-integration-section').prop('checked', true);\n    this.$status.removeClass('off');\n    this.$status.addClass('on'); // return setTimeout($.proxy((function() {\n    //     this.$actionMenu.find('a[data-action=disable]:first').parent().removeClass('hidden');\n    //     return this.$actionMenu.find('a[data-action=enable]:first').parent().addClass('hidden');\n    // }), this), 200);\n  },\n  \"delete\": function _delete() {\n    return this.$container.remove();\n  },\n  settings: function settings() {\n    if (!this.modal) {\n      return this.modal = new SettingsModal(this);\n    } else {\n      return this.modal.show();\n    }\n  },\n  updateSectionSettings: function updateSectionSettings() {\n    return $.each(this.modal.$modalInputs, $.proxy(function (i, input) {\n      var value;\n      value = $(input).val();\n\n      if (value !== '') {\n        return this.$container.prepend($(input).addClass('hidden'));\n      }\n    }, this));\n  },\n  onMenuOptionSelect: function onMenuOptionSelect(option) {\n    var $option;\n    $option = $(option);\n\n    switch ($option.data('action')) {\n      case 'collapse':\n        return this.collapse(true);\n\n      case 'expand':\n        return this.expand();\n\n      case 'disable':\n        return this.disable();\n\n      case 'enable':\n        this.enable();\n        return this.expand();\n\n      case 'delete':\n        return this[\"delete\"]();\n\n      case 'settings':\n        return this.settings();\n    }\n  }\n});\nGarnish.$doc.ready(function () {\n  // $('.section-collapsible').each((i, el) => {\n  //     new window.FormBuilderSection(el, $(el).data('type'))\n  // });\n  if (Craft.elementIndex) {\n    Craft.elementIndex.on('selectSource', function (e) {\n      var groupId;\n      groupId = e.target.$source.data('id');\n\n      if (groupId) {\n        $('#new-form-btn').attr(\"href\", Craft.getCpUrl() + (\"/form-builder/forms/new?groupId=\" + groupId));\n      } else {\n        $('#new-form-btn').attr('href', Craft.getCpUrl() + '/form-builder/forms/new?groupId=1');\n      }\n    });\n  }\n\n  if ($('.fb-forms').length > 0) {\n    new Clipboard('.copy-handle', {\n      target: function target(trigger) {\n        var handle;\n        handle = $(trigger).data('handle');\n        Craft.cp.displayNotice(Craft.t(\"form-builder\", \"Form handle `\" + handle + \"` copied\"));\n      }\n    });\n    new Clipboard('.twig-snippet', {\n      text: function text(trigger) {\n        var handle, snippet;\n        handle = $(trigger).data('handle');\n        snippet = '{{ craft.fb.form(\"' + handle + '\") }}';\n        Craft.cp.displayNotice(snippet + Craft.t('form-builder', ' copied'));\n        return snippet;\n      }\n    });\n  }\n\n  $('.delete-form').on('click', function (e) {\n    var data;\n    e.preventDefault();\n    data = {\n      id: $(this).data('id')\n    };\n\n    if (confirm(Craft.t('form-builder', \"Are you sure you want to delete this form and all its entries?\"))) {\n      Craft.postActionRequest('form-builder/forms/delete', data, $.proxy(function (response, textStatus) {\n        if (textStatus === 'success') {\n          Craft.cp.displayNotice(Craft.t('form-builder', 'Form deleted'));\n          window.location.href = \"\".concat(Craft.getCpUrl(), \"/form-builder/forms\");\n        }\n      }, this));\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./development/js/forms.js\n");

/***/ }),

/***/ 8:
/*!***************************************!*\
  !*** multi ./development/js/forms.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/owldesign/Formbuilder/plugins/formbuilder/development/js/forms.js */"./development/js/forms.js");


/***/ })

/******/ });