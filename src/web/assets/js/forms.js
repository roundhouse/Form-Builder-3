/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!*********************************!*\
  !*** ./development/js/forms.js ***!
  \*********************************/
eval("var FormBuilderSection;\nwindow.FormBuilderSection = Garnish.Base.extend({\n  $container: null,\n  $titlebar: null,\n  $fieldsContainer: null,\n  $optionsContainer: null,\n  $previewContainer: null,\n  // $actionMenu: null,\n  $collapserBtn: null,\n  $sectionToggleInput: null,\n  $menuBtn: null,\n  $status: null,\n  modal: null,\n  collapsed: false,\n  optionCollapsed: true,\n  type: null,\n  $delete: null,\n  init: function init(el, type) {\n    var menuBtn;\n    this.type = type;\n    this.$container = $(el);\n    this.$menuBtn = this.$container.find('.actions > .settings');\n    this.$collapserBtn = this.$container.find('.actions > .bodytoggle');\n    this.$sectionToggleInput = this.$container.find('.section-toggle');\n    this.$titlebar = this.$container.find('.titlebar');\n    this.$fieldsContainer = this.$container.find('.body');\n    this.$optionsContainer = this.$container.find('.body-options');\n    this.$previewContainer = this.$container.find('.preview');\n    this.$status = this.$container.find('.actions > .status');\n    this.$delete = this.$container.find('.delete-btn'); // menuBtn = new Garnish.MenuBtn(this.$menuBtn);\n    // this.$actionMenu = menuBtn.menu.$container;\n    // menuBtn.menu.settings.onOptionSelect = $.proxy(this, 'onMenuOptionSelect');\n\n    if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n      this.collapse();\n    }\n\n    this._handleTitleBarClick = function (ev) {\n      ev.preventDefault();\n      return this.toggle();\n    };\n\n    this.addListener(this.$delete, 'click', this[\"delete\"]);\n    this.addListener(this.$collapserBtn, 'click', this.toggle);\n    this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n  },\n  toggle: function toggle() {\n    if (this.collapsed) {\n      return this.expand();\n    } else {\n      this.$sectionToggleInput.prop('checked', true);\n      return this.collapse(true);\n    }\n  },\n  collapse: function collapse(animate) {\n    var $customTemplates;\n    var $fields;\n    var previewHtml;\n    var title;\n    this.$sectionToggleInput.prop('checked', true);\n\n    if (this.collapsed) {\n      return;\n    }\n\n    this.$container.addClass('bodycollapsed');\n    previewHtml = '';\n    title = this.$titlebar.find('.tout-title').text();\n    this.$previewContainer.html(previewHtml);\n    this.$fieldsContainer.velocity('stop');\n    this.$container.velocity('stop');\n\n    if (animate) {\n      this.$fieldsContainer.velocity('fadeOut', {\n        duration: 'fast'\n      });\n      this.$container.velocity({\n        height: '100%'\n      }, 'fast');\n    } else {\n      this.$previewContainer.show();\n      this.$fieldsContainer.hide();\n      this.$container.css({\n        height: '100%'\n      });\n    } // setTimeout($.proxy((function() {\n    //     this.$actionMenu.find('a[data-action=collapse]:first').parent().addClass('hidden');\n    //     return this.$actionMenu.find('a[data-action=expand]:first').parent().removeClass('hidden');\n    // }), this), 200);\n\n\n    return this.collapsed = true;\n  },\n  expand: function expand() {\n    var collapsedContainerHeight;\n    var expandedContainerHeight;\n    this.$sectionToggleInput.prop('checked', false);\n\n    if (!this.collapsed) {\n      return;\n    }\n\n    this.$container.removeClass('bodycollapsed');\n    this.$fieldsContainer.velocity('stop');\n    this.$container.velocity('stop');\n    collapsedContainerHeight = this.$container.height();\n    this.$container.height('auto');\n    this.$fieldsContainer.show();\n    expandedContainerHeight = this.$container.height();\n    this.$container.height(collapsedContainerHeight);\n    this.$fieldsContainer.hide().velocity('fadeIn', {\n      duration: 'fast'\n    });\n    this.$container.velocity({\n      height: expandedContainerHeight\n    }, 'fast', $.proxy(function () {\n      return this.$container.height('auto');\n    }, this)); // setTimeout($.proxy((function() {\n    //     this.$actionMenu.find('a[data-action=collapse]:first').parent().removeClass('hidden');\n    //     return this.$actionMenu.find('a[data-action=expand]:first').parent().addClass('hidden');\n    // }), this), 200);\n\n    return this.collapsed = false;\n  },\n  disable: function disable() {\n    this.$fieldsContainer.find('.enable-integration-section').prop('checked', false);\n    this.$status.removeClass('on');\n    this.$status.addClass('off'); // setTimeout($.proxy((function() {\n    //     this.$actionMenu.find('a[data-action=disable]:first').parent().addClass('hidden');\n    //     return this.$actionMenu.find('a[data-action=enable]:first').parent().removeClass('hidden');\n    // }), this), 200);\n\n    return this.collapse(true);\n  },\n  enable: function enable() {\n    this.$fieldsContainer.find('.enable-integration-section').prop('checked', true);\n    this.$status.removeClass('off');\n    this.$status.addClass('on'); // return setTimeout($.proxy((function() {\n    //     this.$actionMenu.find('a[data-action=disable]:first').parent().removeClass('hidden');\n    //     return this.$actionMenu.find('a[data-action=enable]:first').parent().addClass('hidden');\n    // }), this), 200);\n  },\n  \"delete\": function _delete() {\n    return this.$container.remove();\n  },\n  settings: function settings() {\n    if (!this.modal) {\n      return this.modal = new SettingsModal(this);\n    } else {\n      return this.modal.show();\n    }\n  },\n  updateSectionSettings: function updateSectionSettings() {\n    return $.each(this.modal.$modalInputs, $.proxy(function (i, input) {\n      var value;\n      value = $(input).val();\n\n      if (value !== '') {\n        return this.$container.prepend($(input).addClass('hidden'));\n      }\n    }, this));\n  },\n  onMenuOptionSelect: function onMenuOptionSelect(option) {\n    var $option;\n    $option = $(option);\n\n    switch ($option.data('action')) {\n      case 'collapse':\n        return this.collapse(true);\n\n      case 'expand':\n        return this.expand();\n\n      case 'disable':\n        return this.disable();\n\n      case 'enable':\n        this.enable();\n        return this.expand();\n\n      case 'delete':\n        return this[\"delete\"]();\n\n      case 'settings':\n        return this.settings();\n    }\n  }\n});\nFormEdit = Garnish.Base.extend({\n  $inputTemplatePath: null,\n  init: function init() {\n    this.$inputTemplatePath = $('#input-template-path');\n    this.addListener(this.$inputTemplatePath, 'keyup', this.checkInputTemplatePath);\n  },\n  checkInputTemplatePath: function checkInputTemplatePath() {\n    var _this = this;\n\n    Craft.postActionRequest('form-builder/forms/check-input-template-path', {\n      path: this.$inputTemplatePath.val()\n    }, $.proxy(function (response, textStatus) {\n      if (response.valid) {\n        _this.$inputTemplatePath.removeClass('error');\n\n        _this.$inputTemplatePath.addClass('success');\n      } else {\n        _this.$inputTemplatePath.removeClass('success');\n\n        _this.$inputTemplatePath.addClass('error');\n      }\n    }, this));\n  }\n});\nGarnish.$doc.ready(function () {\n  $('.section-collapsible').each(function (i, el) {\n    new window.FormBuilderSection(el, $(el).data('type'));\n  });\n\n  if (Craft.elementIndex) {\n    Craft.elementIndex.on('selectSource', function (e) {\n      var groupId;\n      groupId = e.target.$source.data('id');\n\n      if (groupId) {\n        $('#new-form-btn').attr(\"href\", Craft.getCpUrl() + (\"/form-builder/forms/new?groupId=\" + groupId));\n      } else {\n        $('#new-form-btn').attr('href', Craft.getCpUrl() + '/form-builder/forms/new?groupId=1');\n      }\n    });\n  }\n\n  if ($('.fb-forms').length > 0) {\n    new Clipboard('.copy-handle', {\n      target: function target(trigger) {\n        var handle;\n        handle = $(trigger).data('handle');\n        Craft.cp.displayNotice(Craft.t(\"form-builder\", \"Form handle `\" + handle + \"` copied\"));\n      }\n    });\n    new Clipboard('.twig-snippet', {\n      text: function text(trigger) {\n        var handle, snippet;\n        handle = $(trigger).data('handle');\n        snippet = '{{ craft.fb.form(\"' + handle + '\") }}';\n        Craft.cp.displayNotice(snippet + Craft.t('form-builder', ' copied'));\n        return snippet;\n      }\n    });\n  }\n\n  $('.delete-form').on('click', function (e) {\n    var data;\n    e.preventDefault();\n    data = {\n      id: $(this).data('id')\n    };\n\n    if (confirm(Craft.t('form-builder', \"Are you sure you want to delete this form and all its entries?\"))) {\n      Craft.postActionRequest('form-builder/forms/delete', data, $.proxy(function (response, textStatus) {\n        if (textStatus === 'success') {\n          Craft.cp.displayNotice(Craft.t('form-builder', 'Form deleted'));\n          window.location.href = \"\".concat(Craft.getCpUrl(), \"/form-builder/forms\");\n        }\n      }, this));\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./development/js/forms.js\n");
/******/ })()
;