{%- set options         = options is defined and options is not empty ? options : {} %}
{%- set errors          = entry.getErrors()|length ? entry.getErrors() : false %}
{%- set errorClass      = 'fb-submission-error' %}

{%- set formOptions     = form.options -%}
{%- set formSettings    = form.settings -%}
{%- set spam            = form.spam -%}

{%- set formClass = [
    options.formClass is defined ? options.formClass : form.handle ~ '-form',
    (formOptions.formClass is defined and formOptions.formClass != '' ? formOptions.formClass : null)
]|filter|join(' ') %}
{% set formId = form.handle ~ '-form' %}
{% if formOptions.formId is defined and formOptions.formId != '' %}
    {% set formId = formOptions.formId %}
{% endif %}
{% if options.formId is defined ? options.formId %}
    {% set formId = options.formId %}
{% endif %}

<form method="post" accept-charset="utf-8" enctype="multipart/form-data" {%- if formId %} id="{{ formId }}"{% endif -%} {%- if formClass %} class="{{ formClass -}}{%- if errors %} {{ errorClass }}{% endif -%}"{% endif -%}>
    {{ csrfInput() }}

    <input type="hidden" name="action" value="form-builder/entries/save">
    <input type="hidden" name="formId" value="{{ form.id }}">
    <input type="hidden" name="statusId" value="1">

    {# Page Context #}
    {% if options.context is defined %}
        <input type="hidden" name="contextEntryId" value="{{ options.context.id }}">
    {% endif %}

    {# Redirect #}
    {% if formOptions.redirect.enabled %}
        <input type="hidden" name="redirect" value="{% if formOptions.redirect.enabled %}{{ url(formOptions.redirect.url)|hash }}{% else %}{{ craft.request.url|hash }}{% endif %}">
    {% endif %}

    {# Spam Protection #}
    {% if spam.honeypot.enabled is defined and spam.honeypot.enabled %}
        <div style="display:none;"><label for="email-address-new-one">{{ spam.honeypot.message }}</label><input name="email-address-new-one" value="" id="email-address-new-one"></div>
    {% endif %}

    {% if spam.timed.enabled is defined and spam.timed.enabled %}
        <input type="hidden" name="spamTimeMethod" value="{{ 'now'|date('U') }}">
    {% endif %}

    {% hook 'formBuilder.beforeFieldsHook' %}

    {{ fieldset | raw }}

    {# Terms & Conditions #}
    {% if formOptions.terms.enabled is defined and formOptions.terms.enabled %}
        {{ craft.fb.getTermsConditionsInputs(form) |raw }}
    {% endif %}

    {% hook 'formBuilder.afterFieldsHook' %}

    <div class="notifications">

        {% if craft.app.session.getFlash('success') %}
            <p class="notification success-message">{{ craft.app.session.getFlash('success') }}</p>
        {% endif %}

        {% if errors %}
        <ul class="errors">
            {% for key, error in errors %}
                <li>{{ error[0] }}</li>
            {% endfor %}
        </ul>
        {% endif %}
    </div>

    <button type="submit">
        {% if formOptions.submitButton.enabled %}
            {{ formOptions.submitButton.text }}
        {% else %}
            {{ "Submit Message" |t }}
        {% endif %}
    </button>

</form>
